{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Condormhub project.",
        "title": "Condormhub API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "user information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user successfully logged in",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.TokenWithUserInformationResponseBody"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "your request is invalid",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "your request is unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "system cannot login user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "user information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "user successfully registered",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.TokenWithUserInformationResponseBody"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "your request is invalid",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "system cannot register user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "description": "user information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserInformationRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user successfully updated account information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "your request is invalid",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "your request is unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "system cannot update your account information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete a user account",
                "responses": {
                    "200": {
                        "description": "account successfully deleted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "your request is unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "cannot parse uuid or cannot delete user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "get user information successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "your request is unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "system cannot get user information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/newpassword": {
            "post": {
                "description": "Reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "token",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ResetPasswordRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "password reset successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.TokenWithUserInformationResponseBody"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "your request is invalid",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "system cannot reset password",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/resetpassword": {
            "post": {
                "description": "Resend verification email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Resend verification email",
                "parameters": [
                    {
                        "description": "token",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ResetPasswordCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "email is sent to user successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "your request is invalid",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "system cannot resend verification email",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/verify": {
            "post": {
                "description": "Verify email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "description": "token",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "email is verified successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.TokenWithUserInformationResponseBody"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "your request is invalid",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "your request is unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "system cannot verify your email",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.HttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Lifestyle": {
            "type": "string",
            "enum": [
                "Active",
                "Creative",
                "Social",
                "Relaxed",
                "Football",
                "Basketball",
                "Tennis",
                "Swimming",
                "Running",
                "Cycling",
                "Badminton",
                "Yoga",
                "Gym \u0026 Fitness",
                "Music",
                "Dancing",
                "Photography",
                "Painting",
                "Gaming",
                "Reading",
                "Writing",
                "DIY \u0026 Crafting",
                "Cooking",
                "Extrovert",
                "Introvert",
                "Night Owl",
                "Early Bird",
                "Traveler",
                "Backpacker",
                "Nature Lover",
                "Camping",
                "Beach Lover",
                "Dog Lover",
                "Cat Lover",
                "Freelancer",
                "Entrepreneur",
                "Office Worker",
                "Remote Worker",
                "Student",
                "Self-Employed"
            ],
            "x-enum-varnames": [
                "Active",
                "Creative",
                "Social",
                "Relaxed",
                "Football",
                "Basketball",
                "Tennis",
                "Swimming",
                "Running",
                "Cycling",
                "Badminton",
                "Yoga",
                "GymAndFitness",
                "Music",
                "Dancing",
                "Photography",
                "Painting",
                "Gaming",
                "Reading",
                "Writing",
                "DIYAndCrafting",
                "Cooking",
                "Extrovert",
                "Introvert",
                "NightOwl",
                "EarlyBird",
                "Traveler",
                "Backpacker",
                "NatureLover",
                "Camping",
                "BeachLover",
                "DogLover",
                "CatLover",
                "Freelancer",
                "Entrepreneur",
                "OfficeWorker",
                "RemoteWorker",
                "Student",
                "SelfEmployed"
            ]
        },
        "domain.Role": {
            "type": "string",
            "enum": [
                "ADMIN",
                "LESSEE",
                "LESSOR"
            ],
            "x-enum-varnames": [
                "AdminRole",
                "LesseeRole",
                "LessorRole"
            ]
        },
        "domain.User": {
            "type": "object",
            "required": [
                "email",
                "username"
            ],
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "filledPersonalInfo": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isStudentVerified": {
                    "type": "boolean"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "lifestyles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Lifestyle"
                    }
                },
                "nationalID": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/domain.Role"
                },
                "studentEvidence": {
                    "description": "studentEvidence",
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.LoginRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.ResetPasswordCreateRequestBody": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "dto.ResetPasswordRequestBody": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.TokenWithUserInformationResponseBody": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "userInformation": {
                    "$ref": "#/definitions/domain.User"
                }
            }
        },
        "dto.UserInformationRequestBody": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "lifestyles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Lifestyle"
                    }
                },
                "nationalID": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "studentEvidence": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.VerifyRequestBody": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "http_response.HttpResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Bearer token authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}